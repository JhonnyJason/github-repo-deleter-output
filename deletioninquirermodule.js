// Generated by CoffeeScript 2.4.1
(function() {
  var CLI, Spinner, createDeletionQuestion, deletioninquirermodule, github, githubRemoteHandler, inquirer, log, utl;

  deletioninquirermodule = {
    name: "deletioninquirermodule"
  };

  //region node_modules
  inquirer = require("inquirer");

  CLI = require('clui');

  Spinner = CLI.Spinner;

  //endregion

  //log Switch
  log = function(arg) {
    if (allModules.debugmodule.modulesToDebug["deletioninquirermodule"] != null) {
      console.log("[deletioninquirermodule]: " + arg);
    }
  };

  //region internal variables
  utl = null;

  github = null;

  githubRemoteHandler = null;

  //endregion

  //region exposed variables
  //endregion

  //#initialization function  -> is automatically being called!  ONLY RELY ON DOM AND VARIABLES!! NO PLUGINS NO OHTER INITIALIZATIONS!!
  deletioninquirermodule.initialize = function() {
    log("deletioninquirermodule.initialize");
    utl = allModules.utilmodule;
    github = allModules.githubhandlermodule;
    return githubRemoteHandler = allModules.githubremotehandlermodule;
  };

  //region internal functions
  createDeletionQuestion = function(repos) {
    return [
      {
        name: "reposToDelete",
        type: "checkbox",
        message: "Check the repositories to delete. Please be careful - they will be deleted immediately!\n\n",
        choices: repos
      }
    ];
  };

  //endregion

  //region exposed functions
  deletioninquirermodule.doUserInquiry = async function() {
    var allRepos, answers, question, reposToDelete, status;
    log("deletioninquirermodule.doUserInquiry");
    status = new Spinner('Retrieving all repositories you own...');
    try {
      status.start();
      allRepos = (await github.retrieveAllUserRepositories());
    } finally {
      status.stop();
    }
    log("length of result: " + allRepos.length);
    log(JSON.stringify(allRepos, null, 2));
    question = createDeletionQuestion(allRepos);
    answers = (await inquirer.prompt(question));
    reposToDelete = answers.reposToDelete;
    return reposToDelete;
  };

  //endregion
  module.exports = deletioninquirermodule;

}).call(this);
